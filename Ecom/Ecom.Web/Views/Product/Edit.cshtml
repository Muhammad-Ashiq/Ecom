@model Ecom.Web.ViewModels.EditProductViewModel
@{
    ViewBag.Title = "Edit";
    var imageUrl = !string.IsNullOrEmpty(Model.ImageUrl) ? Model.ImageUrl : "/Content/images/image.png";
}

<h2>Edit Product</h2>
<form id="editProduct">
    <input type="hidden" name="ID" value="@Model.Id" />
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label>Category</label>
                <select class="form-control" name="CategoryID">
                    @foreach (var category in Model.AvailableCategories)
                    {
                        var selected = category.Id == Model.CategoryId ? "selected" : string.Empty;
                        <option value="@category.Id" @selected>@category.Name</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label>Name</label>
                <input class="form-control" name="Name" value="@Model.Name" />
            </div>
            <div class="form-group">
                <label>Description</label>
                <input class="form-control" name="Description" value="@Model.Description" />
            </div>
            <div class="form-group">
                <label>Price</label>
                <input class="form-control" name="Price" value="@Model.Price" />
            </div>
            <div class="form-group">
                <label>Image</label>
                <input type="hidden" id="ImageURL" name="ImageURL" />
                <input class="form-control" id="imageUpload" name="Image" type="file" accept=".png, .jpg" />
            </div>

            <button id="updateBtn" type="button" class="btn btn-primary">Update</button>
            <button id="cancelBtn" type="button" class="btn btn-primary">Cancel</button>
        </div>
        <div class="col-md-4">
            <div class="thumb">
                <img class="img-thumbnail img-fluid" id="productImage" src="@imageUrl" />
            </div>
        </div>
    </div>
    @*<div class="form-group">
            <label>Category</label>
            <select class="form-control" name="CategoryID">
                @foreach (var category in Model.AvailableCategories)
                {
                    var selected = category.Id == Model.CategoryId ? "selected" : string.Empty;
                    <option value="@category.Id" @selected>@category.Name</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label>Name</label>
            <input class="form-control" name="Name" value="@Model.Name" />
        </div>
        <div class="form-group">
            <label>Description</label>
            <input class="form-control" name="Description" value="@Model.Description" />
        </div>
        <div class="form-group">
            <label>Price</label>
            <input class="form-control"name="Price" value="@Model.Price" />
        </div>
        <button id="updateBtn" type="button" class="btn btn-primary">Update</button>
        <button id="cancelBtn" type="button" class="btn btn-primary">Cancel</button>*@
</form>

<script>

    $("#editProduct").validate({
        rules: {
            Name: {
                required: true,
                minlength: 5,
                maxlength: 50
            },
            Description: {
                maxlength: 50
            },
            Price: {
                range: [1, 100000]
            }
        },
        messsages: {
            Name: {
                required: 'Name is required',
                minlength: 'Min length Should be 5',
                maxlength: 'Maximun length should be 50'
            },
            Description: {
                maxlength: 'Maximum length should br 500'
            },
            Price: {
                range: 'Price must be within range of 1 - 100000.'
            }
        }
    });

    $("#imageUpload").change(function () {
        var element = this;

        var formData = new FormData();

        var totalFiles = element.files.length;

        for (var i = 0; i < totalFiles; i++) {
            var file = element.files[i];
            formData.append("Photo", file);
        }

        $.ajax({
            type: 'POST',
            url: '@Url.Action("UploadImage", "Shared")',
            dataType: 'json',
            data: formData,
            contentType: false,
            processData: false
        })
            .done(function (response) {
                console.log(response);

                if (response.Success) {
                    $("#ImageUrl").val(response.ImageURL);
                    $("#productImage").attr("src", response.ImageURL);
                }
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("FAIL");
            });
    });

    $("#updateBtn").click(function () {
        if ($("#editProduct").valid()) {
            $.ajax({
                type: 'Post',
                url: '@Url.Action("Edit", "Product")',
                data: $("#editProduct").serialize()

            })
            .done(function (response) {
                $("#tableContiner").html(response);
                $("#actionContainer").html("");
            })
            .fail(function (textStatus, erroethrow) {
                alert("Fail");
            });
        } else {
            swal({
                title: "Warning",
                text: "Please Enter All Valid Data In Fields.",
                icon: "warning",
                button: true,
                dangerMode: true
            });
        }

    });

    $("#cancelBtn").click(function () {
        $("#actionContainer").html("");
        focusAction("tableContiner");
    });
</script>