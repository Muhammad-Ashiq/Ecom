@model Ecom.Web.ViewModels.ProductSearchViewModel
@{
    ViewBag.Title = "ProductTable";
    //Layout = "~/Views/Shared/_Layout.cshtml";

}

@*<link rel="stylesheet" type="text/css" href="/Content/stylesheets/sweetalert.css">*@
<script src="/Content/javascript/sweetalert.min.js"></script>

<script src="/Scripts/jquery.validate.min.js"></script>
@*<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js"></script>*@

@*<link rel="stylesheet" type="text/css" href="//cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css">
<script src="//cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>*@

<div>
    <form method="post">
        <div class="row">
            <div class="col-md-8">
                <div class="form-group">
                    <label>Search</label>
                    <input class="form-control" id="searchTxt" name="Search" value="@Model.SearchTerm" />
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label>Action</label>
                    <div class="row">
                        <div class="col-md-4 pr-0">
                            <button class="btn btn-primary form-control" type="button" id="searchBtn">Search</button>
                        </div>
                        <div class="col-md-4 pr-0">
                            <button class="btn btn-primary form-control" type="button" id="resetBtn">Reset</button>
                        </div>
                        <div class="col-md-4 pr-0">
                            <button class="btn btn-primary form-control" type="button" id="newBtn">New</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>		
    </form>
</div>
<div>
    <table id="productTable"   class="table table-striped">
        <thead>
    
        <tr>
            <th class="font-weight-bold">Product Name</th>
            <th class="font-weight-bold">Category</th>
            <th class="font-weight-bold">Price</th>
            <th class="font-weight-bold wrap-td">Actions</th>
        </tr>

        </thead>
        <tbody>
        @if (Model.Products != null && Model.Products.Count > 0)
        {

            foreach (var product in Model.Products)
            {
                <tr>
                    <td>@product.Name</td>
                    <td>
                        @product.Category.Name
                        
                    </td>
                    <td>@product.Price</td>
                    <td class="wrap-td">
                        
                        <button class="editBtn" data-id="@product.Id">Edit</button>
                        <button class="deleteBtn" data-id="@product.Id">Delete</button>
                        <button class="addtoCart" data-id="@product.Id">Add To Cart</button>
                    </td>
                </tr>
            }
            
        }
        else
        {
            <tr>
                <td class="text-danger" colspan="4">Please Select From Previous products.</td>
            </tr>
        }
        </tbody>
    </table>
    <div>
        @if (Model.Pager != null && Model.Pager.PageSize > 1)
        {

            if (Model.Pager.CurrentPage > 1)
            {
                <button class="pageButtons" data-pageno="1">First</button>
                <button class="pageButtons" data-pageno="@(Model.Pager.CurrentPage - 1)">Previous</button>
            }

            for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
            {
                string activeClass = Model.Pager.CurrentPage == page ? "active bg-info" : string.Empty;

                <button class="@activeClass pageButtons" data-pageno="@page">@page</button>
            }

            if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
            {
                <button class="pageButtons" data-pageno="@(Model.Pager.CurrentPage + 1)">Next</button>
                <button class="pageButtons" data-pageno="@Model.Pager.EndPage">Last</button>
            }			
        }

    </div>
</div>
<script>
    //$('#ProductsTable').DataTable();

    $(".pageButtons").click(function () {
        $.ajax({
                url: '@Url.Action("ProductTable", "Product")',
                data: {
                    pageNo: $(this).attr("data-pageno")
                }
            })
    .done(function (response) {
        $("#tableContiner").html(response);

    })
    .fail(function (xmlHttpRequest, textStatus, errorThrown) {
        alert("FAIL");
    });
    });

    $("#searchBtn").click(function () {
        var searchValue = $("#searchTxt").val();
        $.ajax({
                url: '@Url.Action("ProductTable", "Product")',
                data: {
                    search: searchValue
                }
            })
            .done(function (response) {
                $("#tableContiner").html(response);
            })
            .fail(function (xmlHttpRequest, textStatus, errorThrown) {
                alert("FAIL");
            });
    });

    $("#resetBtn").click(function () {
        var searchValue = '';

        $.ajax({
                url: '@Url.Action("ProductTable", "Product")',
                data: {
                    search: searchValue
                }
            })
            .done(function (response) {
                $("#tableContiner").html(response);
            })
            .fail(function (xmlHttpRequest, textStatus, errorThrown) {
                alert("FAIL");
            });
    });

    $("#newBtn").click(function () {
        $.ajax({
                url: '@Url.Action("Create", "Product")',
            })
            .done(function (response) {
                $("#actionContainer").html(response);

                focusAction("actionContainer");
            })
            .fail(function (xmlHttpRequest, textStatus, errorThrown) {
                alert("FAIL");
            });
    });
    $(".editBtn").click(function () {
        $.ajax({
                url: '@Url.Action("Edit", "Product")',
                data: {
                    ID: $(this).attr('data-id')
                }
            })
            .done(function (response) {
                $("#actionContainer").html(response);

                focusAction("actionContainer");
            })
            .fail(function (xmlHttpRequest, textStatus, errorThrown) {
                alert("FAIL");
            });
    });
    
    $(".deleteBtn").click(function () {
        swal({
                title: "Confirm?",
                text: "Are you sure you want to delete this product !",
                icon: "warning",
                buttons: true,
                dangerMode: true
            })
            .then((willDelete) => {
                if (willDelete) {
                    $.ajax({
                            type: 'POST',
                            url: '@Url.Action("Delete", "Product")',
                            data: {
                                ID: $(this).attr('data-id')
                            }
                        })
                        .done(function (response) {
                            $("#tableContiner").html(response);
                            swal("Record Deleted Successed ", {
                                icon: "success"
                            });
                        })
                        .fail(function (xmlHttpRequest, textStatus, errorThrown) {
                            alert("FAIL");
                        });
                }
            });
    });
    var products = [];
    $(".addtoCart").click(function () {

        

        var productId = $(this).attr('data-id');

        products.push(productId);

        $.cookie('CartProducts', products.join('-'));
        swal
            ( "Product is add to Cart");
        //alert("Product is Added to Cart");
    });
</script>